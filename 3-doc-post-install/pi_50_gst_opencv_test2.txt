
                 | port=5100 -> /test
 raspivid (h264) |
                 | (omxh264dec) /tmp/camera2 -> (x-raw,I420) test -> /tmp/camera3 (omxh264enc) -> /test2 

-------------------------------------------------------------------------------
#!/bin/bash
sudo killall raspivid gst-launch test-launch test test.py
rm /tmp/camera*;\
raspivid -t 0 -w 640 -h 480 -fps 30/1 -b 3000000 -g 5 -vf -hf -cd H264 -n -fl -ih -o -  \
  | gst-launch-1.0 fdsrc  \
  ! h264parse  \
  ! video/x-h264,stream-format=byte-stream  \
  ! tee name=streams \
  ! queue max-size-buffers=0 max-size-time=0 max-size-bytes=0 \
  ! udpsink host=127.0.0.1 port=5100 streams. \
  ! queue max-size-buffers=0 max-size-time=0 max-size-bytes=0 \
  ! omxh264dec \
  ! shmsink socket-path=/tmp/camera2 wait-for-connection=false sync=false &
sleep 1
/home/pi/Projects/opencv_test/test &
sleep 1
/home/pi/Projects/gst-rtsp-server-1.14.4/examples/test-launch  \
"udpsrc port=5100 do-timestamp=true ! video/x-h264,stream-format=byte-stream,alignment=au ! rtph264pay name=pay0 pt=96 config-interval=1" \
"shmsrc socket-path=/tmp/camera3 do-timestamp=true ! video/x-raw, format=I420, width=640, height=480, framerate=30/1 ! omxh264enc ! video/x-h264,profile=high  ! rtph264pay name=pay0 pt=96 config-interval=1"

client update with raspberry pi IP
gst-launch-1.0 rtspsrc location=rtsp://192.168.3.2:8554/test ! rtph264depay ! avdec_h264 ! xvimagesink sync=false
gst-launch-1.0 rtspsrc location=rtsp://192.168.3.2:8554/test2 ! rtph264depay ! avdec_h264 ! xvimagesink sync=false

-------------------------------------------------------------------------------
/*
g++ -g ./test.cpp -o test `pkg-config --cflags --libs opencv4`
*/
#include <opencv2/opencv.hpp>
#define WIDTH 640
#define HEIGHT 480
#define FPS 30
#define SCALE 3/2

using namespace cv;
using namespace std;
int main(int, char**)
{
 unsigned int dataSize = sizeof(unsigned char)*WIDTH*HEIGHT*SCALE;
 Mat imageIn(WIDTH*SCALE, HEIGHT, CV_8UC1);
 Mat imageOut(WIDTH,HEIGHT,CV_8UC3,Scalar(0,0,0));
 //cout << getBuildInformation() << endl;

 string streamInGstStr="shmsrc socket-path=/tmp/camera2 ! video/x-raw,width="+to_string(WIDTH)+
  ",height="+to_string(HEIGHT)+",framerate="+to_string(FPS)+"/1,format=I420 ! appsink sync=true";
 string streamOutGstStr="appsrc ! shmsink socket-path=/tmp/camera3 wait-for-connection=false async=false sync=false";

 VideoCapture streamIn(streamInGstStr,CAP_GSTREAMER);
 VideoWriter  streamOut(streamOutGstStr,0,FPS/1,Size(WIDTH,HEIGHT),true);

 if (streamIn.isOpened() && streamOut.isOpened()) {
   while (true) {
     streamIn.read(imageIn);
     if (!imageIn.empty()) {
       memcpy(imageOut.data,imageIn.data,dataSize);
       streamOut.write(imageOut);
     }
   }
 }
 return 0;
}
